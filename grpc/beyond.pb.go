// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beyond.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Empty for request or response.
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// Name and Type tuples.
type NameType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameType) Reset()         { *m = NameType{} }
func (m *NameType) String() string { return proto.CompactTextString(m) }
func (*NameType) ProtoMessage()    {}
func (*NameType) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{1}
}

func (m *NameType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameType.Unmarshal(m, b)
}
func (m *NameType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameType.Marshal(b, m, deterministic)
}
func (m *NameType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameType.Merge(m, src)
}
func (m *NameType) XXX_Size() int {
	return xxx_messageInfo_NameType.Size(m)
}
func (m *NameType) XXX_DiscardUnknown() {
	xxx_messageInfo_NameType.DiscardUnknown(m)
}

var xxx_messageInfo_NameType proto.InternalMessageInfo

func (m *NameType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameType) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

//SortedMap messages.
type SM struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM) Reset()         { *m = SM{} }
func (m *SM) String() string { return proto.CompactTextString(m) }
func (*SM) ProtoMessage()    {}
func (*SM) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2}
}

func (m *SM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM.Unmarshal(m, b)
}
func (m *SM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM.Marshal(b, m, deterministic)
}
func (m *SM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM.Merge(m, src)
}
func (m *SM) XXX_Size() int {
	return xxx_messageInfo_SM.Size(m)
}
func (m *SM) XXX_DiscardUnknown() {
	xxx_messageInfo_SM.DiscardUnknown(m)
}

var xxx_messageInfo_SM proto.InternalMessageInfo

// messages used for request.
type SM_Name struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_Name) Reset()         { *m = SM_Name{} }
func (m *SM_Name) String() string { return proto.CompactTextString(m) }
func (*SM_Name) ProtoMessage()    {}
func (*SM_Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 0}
}

func (m *SM_Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_Name.Unmarshal(m, b)
}
func (m *SM_Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_Name.Marshal(b, m, deterministic)
}
func (m *SM_Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_Name.Merge(m, src)
}
func (m *SM_Name) XXX_Size() int {
	return xxx_messageInfo_SM_Name.Size(m)
}
func (m *SM_Name) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_Name.DiscardUnknown(m)
}

var xxx_messageInfo_SM_Name proto.InternalMessageInfo

func (m *SM_Name) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SM_NameKey struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_NameKey) Reset()         { *m = SM_NameKey{} }
func (m *SM_NameKey) String() string { return proto.CompactTextString(m) }
func (*SM_NameKey) ProtoMessage()    {}
func (*SM_NameKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 1}
}

func (m *SM_NameKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_NameKey.Unmarshal(m, b)
}
func (m *SM_NameKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_NameKey.Marshal(b, m, deterministic)
}
func (m *SM_NameKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_NameKey.Merge(m, src)
}
func (m *SM_NameKey) XXX_Size() int {
	return xxx_messageInfo_SM_NameKey.Size(m)
}
func (m *SM_NameKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_NameKey.DiscardUnknown(m)
}

var xxx_messageInfo_SM_NameKey proto.InternalMessageInfo

func (m *SM_NameKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SM_NameKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type SM_NameKeyValue struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_NameKeyValue) Reset()         { *m = SM_NameKeyValue{} }
func (m *SM_NameKeyValue) String() string { return proto.CompactTextString(m) }
func (*SM_NameKeyValue) ProtoMessage()    {}
func (*SM_NameKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 2}
}

func (m *SM_NameKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_NameKeyValue.Unmarshal(m, b)
}
func (m *SM_NameKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_NameKeyValue.Marshal(b, m, deterministic)
}
func (m *SM_NameKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_NameKeyValue.Merge(m, src)
}
func (m *SM_NameKeyValue) XXX_Size() int {
	return xxx_messageInfo_SM_NameKeyValue.Size(m)
}
func (m *SM_NameKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_NameKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_SM_NameKeyValue proto.InternalMessageInfo

func (m *SM_NameKeyValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SM_NameKeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SM_NameKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SM_NameKeyForwardOffsetLimit struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Forward              bool     `protobuf:"varint,3,opt,name=forward,proto3" json:"forward,omitempty"`
	Offset               uint64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_NameKeyForwardOffsetLimit) Reset()         { *m = SM_NameKeyForwardOffsetLimit{} }
func (m *SM_NameKeyForwardOffsetLimit) String() string { return proto.CompactTextString(m) }
func (*SM_NameKeyForwardOffsetLimit) ProtoMessage()    {}
func (*SM_NameKeyForwardOffsetLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 3}
}

func (m *SM_NameKeyForwardOffsetLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_NameKeyForwardOffsetLimit.Unmarshal(m, b)
}
func (m *SM_NameKeyForwardOffsetLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_NameKeyForwardOffsetLimit.Marshal(b, m, deterministic)
}
func (m *SM_NameKeyForwardOffsetLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_NameKeyForwardOffsetLimit.Merge(m, src)
}
func (m *SM_NameKeyForwardOffsetLimit) XXX_Size() int {
	return xxx_messageInfo_SM_NameKeyForwardOffsetLimit.Size(m)
}
func (m *SM_NameKeyForwardOffsetLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_NameKeyForwardOffsetLimit.DiscardUnknown(m)
}

var xxx_messageInfo_SM_NameKeyForwardOffsetLimit proto.InternalMessageInfo

func (m *SM_NameKeyForwardOffsetLimit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SM_NameKeyForwardOffsetLimit) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SM_NameKeyForwardOffsetLimit) GetForward() bool {
	if m != nil {
		return m.Forward
	}
	return false
}

func (m *SM_NameKeyForwardOffsetLimit) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SM_NameKeyForwardOffsetLimit) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SM_OP struct {
	Op                   []byte   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_OP) Reset()         { *m = SM_OP{} }
func (m *SM_OP) String() string { return proto.CompactTextString(m) }
func (*SM_OP) ProtoMessage()    {}
func (*SM_OP) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 4}
}

func (m *SM_OP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_OP.Unmarshal(m, b)
}
func (m *SM_OP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_OP.Marshal(b, m, deterministic)
}
func (m *SM_OP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_OP.Merge(m, src)
}
func (m *SM_OP) XXX_Size() int {
	return xxx_messageInfo_SM_OP.Size(m)
}
func (m *SM_OP) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_OP.DiscardUnknown(m)
}

var xxx_messageInfo_SM_OP proto.InternalMessageInfo

func (m *SM_OP) GetOp() []byte {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *SM_OP) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SM_OP) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SM_NameTransaction struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Op                   []*SM_OP `protobuf:"bytes,2,rep,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_NameTransaction) Reset()         { *m = SM_NameTransaction{} }
func (m *SM_NameTransaction) String() string { return proto.CompactTextString(m) }
func (*SM_NameTransaction) ProtoMessage()    {}
func (*SM_NameTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 5}
}

func (m *SM_NameTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_NameTransaction.Unmarshal(m, b)
}
func (m *SM_NameTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_NameTransaction.Marshal(b, m, deterministic)
}
func (m *SM_NameTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_NameTransaction.Merge(m, src)
}
func (m *SM_NameTransaction) XXX_Size() int {
	return xxx_messageInfo_SM_NameTransaction.Size(m)
}
func (m *SM_NameTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_NameTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SM_NameTransaction proto.InternalMessageInfo

func (m *SM_NameTransaction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SM_NameTransaction) GetOp() []*SM_OP {
	if m != nil {
		return m.Op
	}
	return nil
}

type SM_NameOPKeyValue struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Op                   []byte   `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Key                  []byte   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_NameOPKeyValue) Reset()         { *m = SM_NameOPKeyValue{} }
func (m *SM_NameOPKeyValue) String() string { return proto.CompactTextString(m) }
func (*SM_NameOPKeyValue) ProtoMessage()    {}
func (*SM_NameOPKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 6}
}

func (m *SM_NameOPKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_NameOPKeyValue.Unmarshal(m, b)
}
func (m *SM_NameOPKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_NameOPKeyValue.Marshal(b, m, deterministic)
}
func (m *SM_NameOPKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_NameOPKeyValue.Merge(m, src)
}
func (m *SM_NameOPKeyValue) XXX_Size() int {
	return xxx_messageInfo_SM_NameOPKeyValue.Size(m)
}
func (m *SM_NameOPKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_NameOPKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_SM_NameOPKeyValue proto.InternalMessageInfo

func (m *SM_NameOPKeyValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SM_NameOPKeyValue) GetOp() []byte {
	if m != nil {
		return m.Op
	}
	return nil
}

func (m *SM_NameOPKeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SM_NameOPKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// messages used for response.
type SM_Length struct {
	Length               uint64   `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_Length) Reset()         { *m = SM_Length{} }
func (m *SM_Length) String() string { return proto.CompactTextString(m) }
func (*SM_Length) ProtoMessage()    {}
func (*SM_Length) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 7}
}

func (m *SM_Length) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_Length.Unmarshal(m, b)
}
func (m *SM_Length) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_Length.Marshal(b, m, deterministic)
}
func (m *SM_Length) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_Length.Merge(m, src)
}
func (m *SM_Length) XXX_Size() int {
	return xxx_messageInfo_SM_Length.Size(m)
}
func (m *SM_Length) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_Length.DiscardUnknown(m)
}

var xxx_messageInfo_SM_Length proto.InternalMessageInfo

func (m *SM_Length) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type SM_KeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SM_KeyValue) Reset()         { *m = SM_KeyValue{} }
func (m *SM_KeyValue) String() string { return proto.CompactTextString(m) }
func (*SM_KeyValue) ProtoMessage()    {}
func (*SM_KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_01b2f43be8528e93, []int{2, 8}
}

func (m *SM_KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SM_KeyValue.Unmarshal(m, b)
}
func (m *SM_KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SM_KeyValue.Marshal(b, m, deterministic)
}
func (m *SM_KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SM_KeyValue.Merge(m, src)
}
func (m *SM_KeyValue) XXX_Size() int {
	return xxx_messageInfo_SM_KeyValue.Size(m)
}
func (m *SM_KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SM_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_SM_KeyValue proto.InternalMessageInfo

func (m *SM_KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SM_KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "grpc.Empty")
	proto.RegisterType((*NameType)(nil), "grpc.NameType")
	proto.RegisterType((*SM)(nil), "grpc.SM")
	proto.RegisterType((*SM_Name)(nil), "grpc.SM.Name")
	proto.RegisterType((*SM_NameKey)(nil), "grpc.SM.NameKey")
	proto.RegisterType((*SM_NameKeyValue)(nil), "grpc.SM.NameKeyValue")
	proto.RegisterType((*SM_NameKeyForwardOffsetLimit)(nil), "grpc.SM.NameKeyForwardOffsetLimit")
	proto.RegisterType((*SM_OP)(nil), "grpc.SM.OP")
	proto.RegisterType((*SM_NameTransaction)(nil), "grpc.SM.NameTransaction")
	proto.RegisterType((*SM_NameOPKeyValue)(nil), "grpc.SM.NameOPKeyValue")
	proto.RegisterType((*SM_Length)(nil), "grpc.SM.Length")
	proto.RegisterType((*SM_KeyValue)(nil), "grpc.SM.KeyValue")
}

func init() { proto.RegisterFile("beyond.proto", fileDescriptor_01b2f43be8528e93) }

var fileDescriptor_01b2f43be8528e93 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xc7, 0x9b, 0x8f, 0xa6, 0x65, 0xb6, 0xdb, 0x2d, 0x16, 0x1f, 0xc1, 0x5c, 0xaa, 0x1c, 0x20,
	0x08, 0x51, 0x50, 0x91, 0x10, 0x07, 0x4e, 0xcb, 0x87, 0x04, 0x34, 0x9b, 0x28, 0x46, 0x9c, 0xb8,
	0x78, 0x77, 0xdd, 0xa5, 0xa2, 0x89, 0x23, 0xd7, 0x5b, 0x94, 0x47, 0xe0, 0xd9, 0x78, 0x08, 0x5e,
	0x05, 0xd9, 0x71, 0x4b, 0x6a, 0x2a, 0xe8, 0xcd, 0x33, 0xf9, 0xff, 0x7f, 0x33, 0x63, 0x4f, 0x0b,
	0x83, 0x73, 0x56, 0xf3, 0xf2, 0x72, 0x52, 0x09, 0x2e, 0x39, 0xf2, 0xaf, 0x44, 0x75, 0x11, 0xf5,
	0xa0, 0xfb, 0xb6, 0xa8, 0x64, 0x1d, 0x4d, 0xa1, 0x7f, 0x46, 0x0b, 0xf6, 0xa9, 0xae, 0x18, 0x42,
	0xe0, 0x97, 0xb4, 0x60, 0xa1, 0x33, 0x76, 0xe2, 0x1b, 0xb9, 0x3e, 0xab, 0x9c, 0xac, 0x2b, 0x16,
	0xba, 0x4d, 0x4e, 0x9d, 0xa3, 0x5f, 0x3e, 0xb8, 0x24, 0xc1, 0x18, 0xfc, 0x33, 0x23, 0xb1, 0x6d,
	0xf8, 0x29, 0xf4, 0xd4, 0xb7, 0x8f, 0xac, 0xde, 0x4b, 0x1d, 0x81, 0xf7, 0x8d, 0xd5, 0x1a, 0x3a,
	0xc8, 0xd5, 0x11, 0x7f, 0x80, 0x81, 0x31, 0x7c, 0xa6, 0xcb, 0x6b, 0x76, 0x98, 0x0b, 0xdd, 0x82,
	0xee, 0x5a, 0xc9, 0x43, 0x4f, 0xe7, 0x9a, 0x00, 0xff, 0x70, 0xe0, 0x9e, 0x81, 0xbd, 0xe3, 0xe2,
	0x3b, 0x15, 0x97, 0xe9, 0x7c, 0xbe, 0x62, 0x72, 0xb6, 0x28, 0x16, 0xf2, 0x40, 0x72, 0x08, 0xbd,
	0x79, 0xe3, 0xd5, 0xec, 0x7e, 0xbe, 0x09, 0xd1, 0x1d, 0x08, 0xb8, 0xc6, 0x85, 0xfe, 0xd8, 0x89,
	0xfd, 0xdc, 0x44, 0xaa, 0x97, 0xa5, 0x2a, 0x10, 0x76, 0x75, 0xba, 0x09, 0xf0, 0x2b, 0x70, 0xd3,
	0x0c, 0x0d, 0xc1, 0xe5, 0x95, 0xae, 0x38, 0xc8, 0x5d, 0x5e, 0x1d, 0x3c, 0xc9, 0x29, 0x9c, 0xe8,
	0xd7, 0x11, 0xb4, 0x5c, 0xd1, 0x0b, 0xb9, 0xe0, 0xe5, 0xde, 0xf6, 0xef, 0x6b, 0xbc, 0x3b, 0xf6,
	0xe2, 0xa3, 0xe9, 0xd1, 0x44, 0x3d, 0xf0, 0x84, 0x24, 0x93, 0x34, 0x53, 0xb5, 0xf0, 0x17, 0x18,
	0x2a, 0x46, 0x9a, 0xfd, 0xf3, 0x6e, 0x87, 0x06, 0x61, 0x75, 0xe8, 0xed, 0xe9, 0xd0, 0x6f, 0x77,
	0x38, 0x86, 0x60, 0xc6, 0xca, 0x2b, 0xf9, 0x55, 0xdd, 0xcb, 0x52, 0x9f, 0x34, 0xd7, 0xcf, 0x4d,
	0x84, 0xa7, 0xd0, 0xdf, 0x56, 0x36, 0x54, 0x67, 0x0f, 0xd5, 0x6d, 0x51, 0xa7, 0x3f, 0x3d, 0x08,
	0x4e, 0xf5, 0xd6, 0xa2, 0x87, 0xe0, 0xcf, 0x16, 0x2b, 0x89, 0xcc, 0x5c, 0x7a, 0x6b, 0xf1, 0xb0,
	0x09, 0x36, 0x9b, 0x1b, 0x75, 0x9e, 0x39, 0x28, 0x86, 0x3e, 0x49, 0x5e, 0x0b, 0x46, 0x25, 0x43,
	0xc7, 0xdb, 0x4b, 0x50, 0x12, 0xdc, 0xf6, 0x46, 0x1d, 0xf4, 0x00, 0x02, 0x92, 0xbc, 0x11, 0xbc,
	0xfa, 0x8f, 0xee, 0x11, 0x74, 0x49, 0x32, 0x63, 0xa5, 0x2d, 0x3b, 0xd9, 0x86, 0xcd, 0xe8, 0x51,
	0x07, 0x3d, 0x51, 0xd2, 0xec, 0x5a, 0xa2, 0xdb, 0x3b, 0xd2, 0xcd, 0xe0, 0x36, 0xf9, 0xb1, 0xea,
	0x35, 0x67, 0x05, 0x5f, 0x33, 0x34, 0xb2, 0x1d, 0xb6, 0xf8, 0x25, 0x1c, 0x93, 0xa4, 0xbd, 0x02,
	0xe1, 0x8e, 0xa3, 0xf5, 0xc5, 0x76, 0xbe, 0x00, 0x20, 0x49, 0x9a, 0x11, 0x29, 0x18, 0x2d, 0xd0,
	0xdd, 0x1d, 0xdb, 0x9f, 0x7d, 0xb0, 0x5c, 0xb1, 0x83, 0x12, 0x18, 0x91, 0xe4, 0xbd, 0x64, 0x82,
	0x4a, 0x2e, 0x8c, 0x3b, 0xb2, 0xdb, 0xfc, 0xfb, 0xa7, 0x85, 0x6f, 0x6e, 0x35, 0x1b, 0xb6, 0x7a,
	0x99, 0xf3, 0x40, 0xff, 0xf3, 0x3c, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x90, 0xa0, 0x9c, 0x70,
	0x89, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BeyondClient is the client API for Beyond service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeyondClient interface {
	// list all data structures' name & type.
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Beyond_ListClient, error)
	// [sorted map]
	// create sorted map with given name.
	SMCreate(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*Empty, error)
	// drop sorted map with given name.
	SMDrop(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*Empty, error)
	// get length of given sorted map.
	SMLen(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*SM_Length, error)
	// put key-value into given sorted map.
	SMPut(ctx context.Context, in *SM_NameKeyValue, opts ...grpc.CallOption) (*Empty, error)
	// remove key from given sorted map.
	SMRemove(ctx context.Context, in *SM_NameKey, opts ...grpc.CallOption) (*Empty, error)
	SMTransaction(ctx context.Context, in *SM_NameTransaction, opts ...grpc.CallOption) (*Empty, error)
	// [streaming rpc]
	SMOPStream(ctx context.Context, opts ...grpc.CallOption) (Beyond_SMOPStreamClient, error)
	SMIteratorStream(ctx context.Context, in *SM_NameKeyForwardOffsetLimit, opts ...grpc.CallOption) (Beyond_SMIteratorStreamClient, error)
}

type beyondClient struct {
	cc *grpc.ClientConn
}

func NewBeyondClient(cc *grpc.ClientConn) BeyondClient {
	return &beyondClient{cc}
}

func (c *beyondClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Beyond_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Beyond_serviceDesc.Streams[0], "/grpc.Beyond/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &beyondListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Beyond_ListClient interface {
	Recv() (*NameType, error)
	grpc.ClientStream
}

type beyondListClient struct {
	grpc.ClientStream
}

func (x *beyondListClient) Recv() (*NameType, error) {
	m := new(NameType)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *beyondClient) SMCreate(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMDrop(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMDrop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMLen(ctx context.Context, in *SM_Name, opts ...grpc.CallOption) (*SM_Length, error) {
	out := new(SM_Length)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMLen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMPut(ctx context.Context, in *SM_NameKeyValue, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMRemove(ctx context.Context, in *SM_NameKey, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMTransaction(ctx context.Context, in *SM_NameTransaction, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Beyond/SMTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beyondClient) SMOPStream(ctx context.Context, opts ...grpc.CallOption) (Beyond_SMOPStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Beyond_serviceDesc.Streams[1], "/grpc.Beyond/SMOPStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &beyondSMOPStreamClient{stream}
	return x, nil
}

type Beyond_SMOPStreamClient interface {
	Send(*SM_NameOPKeyValue) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type beyondSMOPStreamClient struct {
	grpc.ClientStream
}

func (x *beyondSMOPStreamClient) Send(m *SM_NameOPKeyValue) error {
	return x.ClientStream.SendMsg(m)
}

func (x *beyondSMOPStreamClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *beyondClient) SMIteratorStream(ctx context.Context, in *SM_NameKeyForwardOffsetLimit, opts ...grpc.CallOption) (Beyond_SMIteratorStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Beyond_serviceDesc.Streams[2], "/grpc.Beyond/SMIteratorStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &beyondSMIteratorStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Beyond_SMIteratorStreamClient interface {
	Recv() (*SM_KeyValue, error)
	grpc.ClientStream
}

type beyondSMIteratorStreamClient struct {
	grpc.ClientStream
}

func (x *beyondSMIteratorStreamClient) Recv() (*SM_KeyValue, error) {
	m := new(SM_KeyValue)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BeyondServer is the server API for Beyond service.
type BeyondServer interface {
	// list all data structures' name & type.
	List(*Empty, Beyond_ListServer) error
	// [sorted map]
	// create sorted map with given name.
	SMCreate(context.Context, *SM_Name) (*Empty, error)
	// drop sorted map with given name.
	SMDrop(context.Context, *SM_Name) (*Empty, error)
	// get length of given sorted map.
	SMLen(context.Context, *SM_Name) (*SM_Length, error)
	// put key-value into given sorted map.
	SMPut(context.Context, *SM_NameKeyValue) (*Empty, error)
	// remove key from given sorted map.
	SMRemove(context.Context, *SM_NameKey) (*Empty, error)
	SMTransaction(context.Context, *SM_NameTransaction) (*Empty, error)
	// [streaming rpc]
	SMOPStream(Beyond_SMOPStreamServer) error
	SMIteratorStream(*SM_NameKeyForwardOffsetLimit, Beyond_SMIteratorStreamServer) error
}

func RegisterBeyondServer(s *grpc.Server, srv BeyondServer) {
	s.RegisterService(&_Beyond_serviceDesc, srv)
}

func _Beyond_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BeyondServer).List(m, &beyondListServer{stream})
}

type Beyond_ListServer interface {
	Send(*NameType) error
	grpc.ServerStream
}

type beyondListServer struct {
	grpc.ServerStream
}

func (x *beyondListServer) Send(m *NameType) error {
	return x.ServerStream.SendMsg(m)
}

func _Beyond_SMCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMCreate(ctx, req.(*SM_Name))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMDrop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMDrop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMDrop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMDrop(ctx, req.(*SM_Name))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMLen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_Name)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMLen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMLen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMLen(ctx, req.(*SM_Name))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_NameKeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMPut(ctx, req.(*SM_NameKeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_NameKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMRemove(ctx, req.(*SM_NameKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SM_NameTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeyondServer).SMTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Beyond/SMTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeyondServer).SMTransaction(ctx, req.(*SM_NameTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Beyond_SMOPStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BeyondServer).SMOPStream(&beyondSMOPStreamServer{stream})
}

type Beyond_SMOPStreamServer interface {
	SendAndClose(*Empty) error
	Recv() (*SM_NameOPKeyValue, error)
	grpc.ServerStream
}

type beyondSMOPStreamServer struct {
	grpc.ServerStream
}

func (x *beyondSMOPStreamServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *beyondSMOPStreamServer) Recv() (*SM_NameOPKeyValue, error) {
	m := new(SM_NameOPKeyValue)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Beyond_SMIteratorStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SM_NameKeyForwardOffsetLimit)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BeyondServer).SMIteratorStream(m, &beyondSMIteratorStreamServer{stream})
}

type Beyond_SMIteratorStreamServer interface {
	Send(*SM_KeyValue) error
	grpc.ServerStream
}

type beyondSMIteratorStreamServer struct {
	grpc.ServerStream
}

func (x *beyondSMIteratorStreamServer) Send(m *SM_KeyValue) error {
	return x.ServerStream.SendMsg(m)
}

var _Beyond_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Beyond",
	HandlerType: (*BeyondServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SMCreate",
			Handler:    _Beyond_SMCreate_Handler,
		},
		{
			MethodName: "SMDrop",
			Handler:    _Beyond_SMDrop_Handler,
		},
		{
			MethodName: "SMLen",
			Handler:    _Beyond_SMLen_Handler,
		},
		{
			MethodName: "SMPut",
			Handler:    _Beyond_SMPut_Handler,
		},
		{
			MethodName: "SMRemove",
			Handler:    _Beyond_SMRemove_Handler,
		},
		{
			MethodName: "SMTransaction",
			Handler:    _Beyond_SMTransaction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Beyond_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SMOPStream",
			Handler:       _Beyond_SMOPStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SMIteratorStream",
			Handler:       _Beyond_SMIteratorStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "beyond.proto",
}
